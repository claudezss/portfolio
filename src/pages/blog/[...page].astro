---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import {getCollection} from "astro:content";

export async function getStaticPaths({paginate}) {
    const posts = await getCollection("blog");
    posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
    return paginate(posts, {pageSize: 10});
}

const {page} = Astro.props;
const allPosts = await getCollection("blog");
allPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

let allTags = [];
allPosts.forEach((entry) => {
    entry.data.tags.forEach(tag => {
        if (!allTags.includes(tag)) {
            allTags.push(tag);
        }
    });
});
const allTagsSet = Array.from(new Set(allTags)).sort();
---

<BaseLayout title="Blog" sideBarActiveItemID="blog">
    <div class="mb-5">
        <div class="text-3xl w-full font-bold">Blog</div>
    </div>

    <!-- Tag Filter Section -->
    <div class="mb-6">
        <div class="text-lg font-semibold mb-3">Filter by tags:</div>
        <div class="flex flex-wrap gap-2 mb-4">
            <button 
                id="clear-filter" 
                class="badge badge-primary cursor-pointer"
            >
                All Posts
            </button>
            {
                allTagsSet.map(tag => (
                    <button 
                        class="badge badge-outline cursor-pointer tag-filter"
                        data-tag={tag}
                    >
                        {tag}
                    </button>
                ))
            }
        </div>
    </div>

    <!-- Posts Container -->
    <div id="posts-container">
        {
            allPosts.length === 0 ? (
                <div class="bg-base-200 border-l-4 border-secondary w-full p-4 min-w-full">
                    <p class="font-bold">Sorry!</p>
                    <p>There are no blog posts to show at the moment. Check back later!</p>
                </div>
            ) : (
                <ul id="posts-list">
                    {allPosts.map((post) => (
                        <li class="post-item" data-tags={post.data.tags.join(',')}>
                            <HorizontalCard
                                title={post.data.title}
                                img={post.data.heroImage}
                                desc={post.data.description}
                                url={"/blog/" + post.slug}
                                tags={post.data.tags}
                                target="_self"
                                badge={post.data.badge}
                            />
                            <div class="divider my-0"/>
                        </li>
                    ))}
                </ul>
            )
        }
    </div>

    <!-- No Results Message -->
    <div id="no-results" class="bg-base-200 border-l-4 border-secondary w-full p-4 min-w-full hidden">
        <p class="font-bold">No posts found</p>
        <p>Try selecting a different tag or view all posts.</p>
    </div>

    <script>
        function filterPosts(selectedTag) {
            const postItems = document.querySelectorAll('.post-item');
            const noResults = document.getElementById('no-results');
            const tagFilters = document.querySelectorAll('.tag-filter');
            const clearFilter = document.getElementById('clear-filter');
            let visibleCount = 0;

            // Update button styles
            tagFilters.forEach(btn => {
                if (btn.dataset.tag === selectedTag) {
                    btn.className = 'badge badge-primary cursor-pointer tag-filter';
                } else {
                    btn.className = 'badge badge-outline cursor-pointer tag-filter';
                }
            });

            if (selectedTag === '') {
                clearFilter.className = 'badge badge-primary cursor-pointer';
            } else {
                clearFilter.className = 'badge badge-outline cursor-pointer';
            }

            // Filter posts
            postItems.forEach(item => {
                const postTags = item.dataset.tags.split(',');
                
                if (selectedTag === '' || postTags.includes(selectedTag)) {
                    item.style.display = 'block';
                    visibleCount++;
                } else {
                    item.style.display = 'none';
                }
            });

            // Show/hide no results message
            if (visibleCount === 0) {
                noResults.classList.remove('hidden');
            } else {
                noResults.classList.add('hidden');
            }
        }

        // Initialize with all posts visible and set up event listeners
        document.addEventListener('DOMContentLoaded', function() {
            filterPosts('');
            
            // Add event listeners to filter buttons
            const clearFilter = document.getElementById('clear-filter');
            const tagFilters = document.querySelectorAll('.tag-filter');
            
            clearFilter.addEventListener('click', function() {
                filterPosts('');
            });
            
            tagFilters.forEach(btn => {
                btn.addEventListener('click', function() {
                    filterPosts(this.dataset.tag);
                });
            });
        });
    </script>
</BaseLayout>
